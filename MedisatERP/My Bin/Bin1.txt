<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Medisat ERP</title>
    <link href="~/favicon.ico" rel="shortcut icon" type="image/x-icon" />

    @* Uncomment to use the HtmlEditor control *@
    @* <script src="https://unpkg.com/devextreme-quill@22_2/dist/dx-quill.min.js"></script> *@

    @* Uncomment to use the Gantt control *@
    @*<link href="~/css/devextreme/dx-gantt.css" rel="stylesheet" />*@

    @* Uncomment to use the Diagram control *@
    @*<link href="~/css/devextreme/dx-diagram.css" rel="stylesheet" />*@

    @*Major Site Styles  *@
    <link href="~/css/devextreme/bootstrap.css" rel="stylesheet" />

    @*Feather icons-- importing icons*@
    <link href="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.css" rel="stylesheet" />

    @* Predefined themes: https://js.devexpress.com/DevExtreme/Guide/Themes_and_Styles/Predefined_Themes/ *@
    
    @* <link href="~/css/devextreme/dx.light.css" rel="stylesheet" />*@
    <link href="~/css/devextreme/dx.light.css" rel="stylesheet" />

    <link rel="stylesheet" href="~/css/medisat.liqht.css" />

    <!-- Google Fonts: Raleway -->
    <link href="https://fonts.googleapis.com/css?family=Raleway:300,400,500,600,700&display=swap" rel="stylesheet">

    <!-- FontAwesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">

    @* Uncomment to use the Gantt control *@
    @*<script src="~/js/devextreme/dx-gantt.js"></script>*@

    @* Uncomment to use the Diagram control *@
    @*<script src="~/js/devextreme/dx-diagram.js"></script>*@

    <script src="~/js/devextreme/jquery.js"></script>
    <script src="~/js/devextreme/bootstrap.js"></script>

    @* Uncomment to use Globalize for localization *@
    @* Docs: https://docs.devexpress.com/AspNetCore/400577#globalize *@
    @*<script src="~/js/devextreme/cldr.js"></script>*@
    @*<script src="~/js/devextreme/cldr/event.js"></script>*@
    @*<script src="~/js/devextreme/cldr/supplemental.js"></script>*@
    @*<script src="~/js/devextreme/cldr/unresolved.js"></script>*@
    @*<script src="~/js/devextreme/globalize.js"></script>*@
    @*<script src="~/js/devextreme/globalize/message.js"></script>*@
    @*<script src="~/js/devextreme/globalize/number.js"></script>*@
    @*<script src="~/js/devextreme/globalize/currency.js"></script>*@
    @*<script src="~/js/devextreme/globalize/date.js"></script>*@

    @* Uncomment to enable client-side export *@
    @*<script src="~/js/devextreme/jszip.js"></script>*@

    <script src="~/js/devextreme/dx.all.js"></script>

    @* Uncomment to provide geo-data for the VectorMap control *@
    @* Docs: https://js.devexpress.com/DevExtreme/Guide/Widgets/VectorMap/Providing_Data/#Data_for_Areas *@
    @*<script src="~/js/devextreme/vectormap-data/world.js"></script>*@
    
    <!-- MetisMenu jQuery plugin --helps in sidebar toggle -->
    <script src="https://cdn.jsdelivr.net/npm/metismenu@3.0.6/dist/metisMenu.min.js"></script>

    <script src="~/js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
    <script src="~/js/devextreme/aspnet/dx.aspnet.data.js"></script>
</head>

<body>

    <content>
        @RenderBody()
     </content>


    @* Script defines custom templates *@
    <script src="~/js/CustomElements.js"></script>

    @* Notifilix framework managing user notifications*@
    <script src="~/js/notiflix-aio-2.5.0.min.js"></script>

    @*Feather Icons: Initialize Feather.js to convert the data-feather attributes into actual SVG elements *@
    <script src="https://cdn.jsdelivr.net/npm/feather-icons/dist/feather.min.js"></script>
    <script>feather.replace();</script>

    <script src="~/js/site.js"></script>

</body>

</html>

Just like with `AspNetUserClaims`, it's generally **not necessary** to display the `AspNetRoleClaims` table directly to users. Here’s why:

### Key Points

1. **Security**:
   - Role claims may contain sensitive information about what permissions or capabilities are granted to specific roles. Displaying this data could expose vulnerabilities or sensitive details.

2. **User Experience**:
   - Users are typically more interested in what they can do rather than the underlying technical details of how permissions are implemented.
   - Providing a user-friendly interface that summarizes the roles and permissions is usually more effective.

3. **Relevance**:
   - For most users, the detailed claims data isn't relevant. They need to understand their permissions and capabilities, not the specifics of role claims.

### Best Practices

Instead of showing the raw `AspNetRoleClaims` table, consider providing users with relevant summaries or interfaces that describe their roles and permissions in a user-friendly way.

#### Example: Role Management Interface

Provide an interface where administrators can manage roles and permissions, and users can see their assigned roles.

**Admin View: Managing Roles and Permissions**

```html
<h2>Manage Roles and Permissions</h2>
<table>
    <tr>
        <th>Role</th>
        <th>Permissions</th>
    </tr>
    <tr>
        <td>Admin</td>
        <td>ManageUsers, ViewReports</td>
    </tr>
    <tr>
        <td>Editor</td>
        <td>EditContent, PublishContent</td>
    </tr>
</table>
<button>Add Role</button>
<button>Edit Role</button>
```

**User View: Viewing Assigned Roles**

```html
<h2>My Roles</h2>
<ul>
    <li>Admin</li>
    <li>Editor</li>
</ul>
```

### Summary

While the `AspNetRoleClaims` table is crucial for defining and managing role-based permissions internally, it’s not necessary to expose this table directly to users. Instead, create user-friendly interfaces that summarize roles and permissions to enhance the user experience while maintaining security.

Feel free to ask if you have more questions or need further assistance with your application! ??


