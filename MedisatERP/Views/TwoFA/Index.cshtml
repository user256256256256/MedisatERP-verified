@using DevExtreme.AspNet.Mvc; @using MedisatERP.Models;



@{
    ViewData["Title"] = "2FA";
    var userId = Model.Id;
}


<div class="container-fluid position-relative d-flex p-0 h-100 authentication-bg justify-content-center align-items-center">
    <div class="d-flex flex-column justify-content-center">

        <!-- Custom template --See ~wwwroot/js/medisat.custom-elements.js WelcomeLogo -->
        <welcome-Logo></welcome-Logo>

        <div class="card shadow-lg border-0 w-30 w-sm-75 w-md-50">
            <div class="card-body p-4">
                @(Html.DevExtreme().TabPanel()
                    .DeferRendering(false)
                    .Height("auto")
                    .ScrollingEnabled(true)
                    .Items(tab =>
                    {
                        tab.Add()
                        .Title("Email")
                        .Icon("fas fa-envelope")
                        .Template(new TemplateName("embedded_2fa_email"));

                        tab.Add()
                        .Title("SMS")
                        .Icon("fas fa-mobile-alt")
                        .Template(new TemplateName("embedded_2fa_sms"));
                    })
                    )
            </div>
        </div>

        <!-- Help text section -->
        <div class="text-center text-secondary mt-2 mb-3 px-2" style="max-width: 300px; margin: 0 auto; word-wrap: break-word; overflow-wrap: break-word;">
            <small>If you're having trouble with email or SMS, contact <strong>security@medisat.com</strong> for further assistance.</small>
        </div>

        <!-- Custom template --See ~wwwroot/js/medisat.custom-elements.js WelcomeFooter -->
        <welcome-footer></welcome-footer>
    </div>
</div>

<div>
    @using (Html.DevExtreme().NamedTemplate("embedded_2fa_email"))
    {
        <div class="card-body p-4">
            <div class="text-center text-primary mb-3 text-decoration-underline">
                <a href="#" id="getCodeEmail" data-type="email" data-userid="@userId">Request code on Email !</a>
            </div>

            <div class="form-group mb-2">
                <label class="mb-1" for="otp_email">Enter Code:</label>

                <!-- Modern OTP Entry with square boxes -->
                <div class="otp-container">
                    <input type="text" class="otp-box" maxlength="1" id="otp_email_1" />
                    <input type="text" class="otp-box" maxlength="1" id="otp_email_2" />
                    <input type="text" class="otp-box" maxlength="1" id="otp_email_3" />
                    <input type="text" class="otp-box" maxlength="1" id="otp_email_4" />
                    <input type="text" class="otp-box" maxlength="1" id="otp_email_5" />
                    <input type="text" class="otp-box" maxlength="1" id="otp_email_6" />
                </div>
            </div>

            <!-- Add Remember Me Checkbox -->
            <div class="form-check mb-2">
                <input type="checkbox" class="form-check-input" id="rememberMe" />
                <label class="form-check-label" for="rememberMe">Remember Me</label>
            </div>

            <!-- Hidden input to define the provider as "email" -->
            <input type="hidden" id="provider" value="email" />

            <div class="d-grid gap-2 mt-4">
                @(Html.DevExtreme().Button()
                    .Text("Verify Code")
                    .Type(ButtonType.Default)
                    .Icon("arrowright")
                    .StylingMode(ButtonStylingMode.Outlined)
                    .Width("100%")
                    .Height(40)
                    .OnClick("verifyCode")
                    .ID("verifyEmailCodeButton")
                    )

            </div>

        </div>
    }


</div>

<div>
    @using (Html.DevExtreme().NamedTemplate("embedded_2fa_sms"))
    {
        <div class="card-body p-4">
            <div class="text-center text-primary mb-3 text-decoration-underline">
                <a href="#" id="getCodeSms" data-type="sms" data-userid="@userId">Get code on SMS !</a>
            </div>

            <div class="form-group mb-2">
                <label class="mb-1" for="otp">Enter Code:</label>
                @(Html.DevExtreme().TextBox().ID("otp_sms")
                    .Value("")
                    .Placeholder("Enter code.")
                    .Width("100%")
                    )
            </div>

            <!-- Add Remember Me Checkbox -->
            <div class="form-check mb-2">
                <input type="checkbox" class="form-check-input" id="rememberMe" />
                <label class="form-check-label" for="rememberMe">Remember Me</label>
            </div>

            <!-- Hidden input to define the provider as "email" -->
            <input type="hidden" id="provider" value="phone" />

            <div class="d-grid gap-2 mt-4">
                @(Html.DevExtreme().Button()
                    .Text("Verify Code")
                    .Type(ButtonType.Default)
                    .Icon("arrowright")
                    .StylingMode(ButtonStylingMode.Outlined)
                    .Width("100%")
                    .Height(40)
                    .OnClick("verifyCode")
                    )
            </div>
        </div>
    }

</div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.otp-box').forEach((input, index, otpBoxes) => {
                // Move focus to next box when user types
                input.addEventListener('input', function () {
                    if (this.value.length === 1 && index < otpBoxes.length - 1) {
                        otpBoxes[index + 1].focus();
                    }
                });

                // Move focus to previous box when user presses backspace
                input.addEventListener('keydown', function (e) {
                    if (e.key === 'Backspace' && this.value === '' && index > 0) {
                        otpBoxes[index - 1].focus();
                    }
                });
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // Event listener for "Get code on Email"
            $("#getCodeEmail").click(function (event) {
                event.preventDefault();
                var userId = $(this).data('userid');
                var method = $(this).data('type');  // 'email' in this case
                sendCodeRequest(userId, method);
            });

            // Event listener for "Get code on SMS"
            $("#getCodeSms").click(function (event) {
                event.preventDefault();
                var userId = $(this).data('userid');
                var method = $(this).data('type');  // 'sms' in this case
                sendCodeRequest(userId, method);
            });

            // Add event listener for the OTP input fields
            $(".otp-box").on('input', function () {
                // Check if all OTP fields are filled
                if (areAllOtpBoxesFilled()) {
                    // Automatically submit OTP
                    verifyCode();
                }
            });

            // Event listener for 'Verify Code' button (for manual submission)
            $('#verifyEmailCodeButton').click(function (event) {
                event.preventDefault();
                verifyCode();
            });
        });

        // Function to check if all OTP boxes are filled
        function areAllOtpBoxesFilled() {
            let allFilled = true;
            $(".otp-box").each(function () {
                if ($(this).val().trim() === '') {
                    allFilled = false;
                }
            });
            return allFilled;
        }

        // Function to send the OTP request via AJAX (using getJSON)
        function sendCodeRequest(userId, method) {
            const url = '/api/TwoFAAPI/SendCode'; // Adjust this endpoint as per your API

            // Prepare data to be sent
            const data = {
                userId: userId,
                method: method // 'email' or 'sms'
            };

            // Show loading indicator
            Notiflix.Loading.Dots('Sending code...');

            // Make the API call using jQuery's getJSON method
            $.getJSON(url, data)
                .done(function (json) {
                    // Remove loading indicator
                    Notiflix.Loading.Remove(500);

                    // Check if the request was successful
                    if (json.success) {
                        Notiflix.Report.Success('Success', json.mresponse, 'OK');
                    } else {
                        Notiflix.Report.Failure('Failure', json.mresponse, 'OK');
                    }
                })
                .fail(function (jqxhr, textStatus, error) {
                    // Remove loading indicator on failure
                    Notiflix.Loading.Remove(500);
                    var err = textStatus + ", " + error;
                    Notiflix.Report.Failure("Failure", "Code request failed: " + err, "OK");
                });
        }

        // Function to verify the OTP code
        function verifyCode() {
            const provider = $('#provider').val(); // The 2FA provider (e.g., 'email', 'sms')

            // Get the OTP code from the input fields
            let code = '';
            for (let i = 1; i <= 6; i++) {
                code += $('#otp_email_' + i).val().trim();  // Collect code from all OTP input fields
            }

            const rememberMe = $('#rememberMe').prop('checked'); // Boolean value for "remember me"
            const userId = '@userId';  // Make sure this is dynamically injected

            // Validate that the code is not empty
            if (!code || code.length !== 6) {
                Notiflix.Report.Failure("Error", "Please enter a valid 6-digit verification code.", "OK");
                return;
            }

            // API endpoint to verify the code
            const url = '/api/TwoFAAPI/VerifyCode'; // Adjust this endpoint as per your API

            // Prepare data to be sent
            const data = {
                userId: userId, // Assuming userId is the email in this context
                provider: provider,
                code: code,
                rememberMe: rememberMe,
            };

            // Show loading indicator
            Notiflix.Loading.Hourglass('Verifying code...');

            // Make the API call using jQuery's getJSON method
            $.getJSON(url, data)
                .done(function (json) {
                    // Remove loading indicator
                    Notiflix.Loading.Remove(500);

                    // Check if the login was successful
                    if (json.success) {
                        // Redirect to the appropriate page based on the redirectTo value
                        if (json.redirectUrl) {
                            window.location.href = json.redirectUrl;  // Redirect to the specified URL
                        } else {
                            // Default behavior if no redirection URL is provided
                            window.location.href = "/"; // or another default page like "/home"
                        }
                    } else {
                        // Report failure if login was unsuccessful
                        Notiflix.Report.Failure("Failure", json.mresponse, "OK");
                    }
                })
                .fail(function (jqxhr, textStatus, error) {
                    // Remove loading indicator on failure
                    Notiflix.Loading.Remove(500);
                    var err = textStatus + ", " + error;
                    Notiflix.Report.Failure("Failure", "Code verification failed: " + err, "OK");
                });
        }

        // Add an event listener for the Enter key to trigger the login button click
        document.addEventListener('keydown', function (event) {
            if (event.key === 'Enter') {
                event.preventDefault(); // Prevent the default form submission behavior
                document.getElementById('verifyEmailCodeButton').click(); // Trigger the login button click
            }
        });

    </script>

    <!-- CSS for the OTP boxes -->
    <style>
        .otp-container {
            display: flex;
            justify-content: space-between;
            gap: 10px;
            max-width: 250px;
        }

        .otp-box {
            width: 30px;
            height: 30px;
            text-align: center;
            font-size: 0.9rem;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
        }

            .otp-box:focus {
                border-color: #0e041e;
            }

            .otp-box:disabled {
                background-color: #f9f9f9;
                cursor: not-allowed;
            }
    </style>

