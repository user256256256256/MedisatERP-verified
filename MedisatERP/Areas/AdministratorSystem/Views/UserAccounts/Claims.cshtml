@using DevExtreme.AspNet.Mvc
@using MedisatERP.Models
@model AspNetUser

@{
    Layout = "_Layout";
    ViewData["Title"] = "User Claims";
    var userId = Model.Id;
}

<!-- Section Title Card -->
<div class="card col-12 card-title">
    <center><span><i data-feather="edit-2"></i>USER CLAIMS</span></center>
</div>

<div class="card" id="userGrid">
    @(
        Html.DevExtreme().DataGrid<AspNetUser>()
        .ShowBorders(true)
        .DataSource(d => d.Mvc().Controller("AspNetUsersAPI").LoadAction("Get").Key("Id"))
        .Columns(columns =>
        {
            columns.AddFor(m => m.UserName).Caption("Username");
            columns.AddFor(m => m.Name).Caption("Full Name");
            columns.AddFor(m => m.Email).Caption("Email");
            columns.AddFor(m => m.PhoneNumber).Caption("Phone Number");
            columns.AddFor(m => m.CreatedAt).Caption("Joined AT");
            columns.AddFor(m => m.UpdatedAt).Caption("Updated At");
            columns.Add()
            .Type(GridCommandColumnType.Buttons)
            .Caption("Manage Claims")
            .Name("ManageClaims")
            .Buttons(b =>
            {
                b.Add().Name(GridColumnButtonName.Delete).Hint("Delete user");
                b.Add().Hint("Claim management").Icon("fas fa-key").OnClick("claimManagement");
            });
        })
        .Paging(p => p.PageSize(10))
        .SearchPanel(s => s.Visible(true).Width(250).Placeholder("Search..."))
        .ShowColumnLines(false)
        .ShowRowLines(true)
        .RowAlternationEnabled(true)
        .ColumnHidingEnabled(true)
        .ColumnAutoWidth(true)
        .Selection(s => s.Mode(SelectionMode.Multiple))
        .FocusedRowEnabled(true)
        .HeaderFilter(f => f.Visible(true))
        .GroupPanel(p => p.Visible(false))
        .Grouping(g => g.AutoExpandAll(false))
        .RemoteOperations(true)
        .Summary(s => s
        .TotalItems(totalItems =>
        {
            totalItems.AddFor(m => m.UserName).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems =>
        {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
        )
        .Editing(e => e
        .AllowAdding(false)
        .AllowUpdating(false)
        .AllowDeleting(true)
        .UseIcons(true)
        .Mode(GridEditMode.Batch)
        )
        )
</div>

<script>
    function claimManagement() {
        return true;
    }
</script>